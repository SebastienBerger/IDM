/*
 * generated by Xtext
 */
grammar InternalSM;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.StateMachine.sm.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.StateMachine.sm.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.StateMachine.sm.services.SMGrammarAccess;

}

@parser::members {
 
 	private SMGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SMGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStateMachine
entryRuleStateMachine 
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineAccess().getGroup()); }
(rule__StateMachine__Group__0)
{ after(grammarAccess.getStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getAlternatives()); }
(rule__State__Alternatives)
{ after(grammarAccess.getStateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionElement
entryRuleExpressionElement 
:
{ before(grammarAccess.getExpressionElementRule()); }
	 ruleExpressionElement
{ after(grammarAccess.getExpressionElementRule()); } 
	 EOF 
;

// Rule ExpressionElement
ruleExpressionElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionElementAccess().getAlternatives()); }
(rule__ExpressionElement__Alternatives)
{ after(grammarAccess.getExpressionElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEBoolean
entryRuleEBoolean 
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
(rule__EBoolean__Alternatives)
{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState_Impl
entryRuleState_Impl 
:
{ before(grammarAccess.getState_ImplRule()); }
	 ruleState_Impl
{ after(grammarAccess.getState_ImplRule()); } 
	 EOF 
;

// Rule State_Impl
ruleState_Impl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getState_ImplAccess().getGroup()); }
(rule__State_Impl__Group__0)
{ after(grammarAccess.getState_ImplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialState
entryRuleInitialState 
:
{ before(grammarAccess.getInitialStateRule()); }
	 ruleInitialState
{ after(grammarAccess.getInitialStateRule()); } 
	 EOF 
;

// Rule InitialState
ruleInitialState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialStateAccess().getGroup()); }
(rule__InitialState__Group__0)
{ after(grammarAccess.getInitialStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanData
entryRuleBooleanData 
:
{ before(grammarAccess.getBooleanDataRule()); }
	 ruleBooleanData
{ after(grammarAccess.getBooleanDataRule()); } 
	 EOF 
;

// Rule BooleanData
ruleBooleanData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanDataAccess().getValueAssignment()); }
(rule__BooleanData__ValueAssignment)
{ after(grammarAccess.getBooleanDataAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerData
entryRuleIntegerData 
:
{ before(grammarAccess.getIntegerDataRule()); }
	 ruleIntegerData
{ after(grammarAccess.getIntegerDataRule()); } 
	 EOF 
;

// Rule IntegerData
ruleIntegerData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerDataAccess().getValueAssignment()); }
(rule__IntegerData__ValueAssignment)
{ after(grammarAccess.getIntegerDataAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup()); }
(rule__VariableReference__Group__0)
{ after(grammarAccess.getVariableReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositeState_Impl
entryRuleCompositeState_Impl 
:
{ before(grammarAccess.getCompositeState_ImplRule()); }
	 ruleCompositeState_Impl
{ after(grammarAccess.getCompositeState_ImplRule()); } 
	 EOF 
;

// Rule CompositeState_Impl
ruleCompositeState_Impl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getGroup()); }
(rule__CompositeState_Impl__Group__0)
{ after(grammarAccess.getCompositeState_ImplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanVariable
entryRuleBooleanVariable 
:
{ before(grammarAccess.getBooleanVariableRule()); }
	 ruleBooleanVariable
{ after(grammarAccess.getBooleanVariableRule()); } 
	 EOF 
;

// Rule BooleanVariable
ruleBooleanVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanVariableAccess().getGroup()); }
(rule__BooleanVariable__Group__0)
{ after(grammarAccess.getBooleanVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerVariable
entryRuleIntegerVariable 
:
{ before(grammarAccess.getIntegerVariableRule()); }
	 ruleIntegerVariable
{ after(grammarAccess.getIntegerVariableRule()); } 
	 EOF 
;

// Rule IntegerVariable
ruleIntegerVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerVariableAccess().getGroup()); }
(rule__IntegerVariable__Group__0)
{ after(grammarAccess.getIntegerVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__State__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getState_ImplParserRuleCall_0()); }
	ruleState_Impl
{ after(grammarAccess.getStateAccess().getState_ImplParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getStateMachineParserRuleCall_1()); }
	ruleStateMachine
{ after(grammarAccess.getStateAccess().getStateMachineParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStateAccess().getCompositeState_ImplParserRuleCall_2()); }
	ruleCompositeState_Impl
{ after(grammarAccess.getStateAccess().getCompositeState_ImplParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_1_0()); }
	ruleBooleanVariable
{ after(grammarAccess.getVariableAccess().getBooleanVariableParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_1_1()); }
	ruleIntegerVariable
{ after(grammarAccess.getVariableAccess().getIntegerVariableParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionElementAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getExpressionElementAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionElementAccess().getBooleanDataParserRuleCall_1()); }
	ruleBooleanData
{ after(grammarAccess.getExpressionElementAccess().getBooleanDataParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionElementAccess().getIntegerDataParserRuleCall_2()); }
	ruleIntegerData
{ after(grammarAccess.getExpressionElementAccess().getIntegerDataParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionElementAccess().getVariableReferenceParserRuleCall_3()); }
	ruleVariableReference
{ after(grammarAccess.getExpressionElementAccess().getVariableReferenceParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getAddEnumLiteralDeclaration_0()); }
(	'add' 
)
{ after(grammarAccess.getOperatorAccess().getAddEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getSubEnumLiteralDeclaration_1()); }
(	'sub' 
)
{ after(grammarAccess.getOperatorAccess().getSubEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getEqEnumLiteralDeclaration_2()); }
(	'eq' 
)
{ after(grammarAccess.getOperatorAccess().getEqEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getMulEnumLiteralDeclaration_3()); }
(	'mul' 
)
{ after(grammarAccess.getOperatorAccess().getMulEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGtEnumLiteralDeclaration_4()); }
(	'gt' 
)
{ after(grammarAccess.getOperatorAccess().getGtEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLtEnumLiteralDeclaration_5()); }
(	'lt' 
)
{ after(grammarAccess.getOperatorAccess().getLtEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLteEnumLiteralDeclaration_6()); }
(	'lte' 
)
{ after(grammarAccess.getOperatorAccess().getLteEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGteEnumLiteralDeclaration_7()); }
(	'gte' 
)
{ after(grammarAccess.getOperatorAccess().getGteEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getDivEnumLiteralDeclaration_8()); }
(	'div' 
)
{ after(grammarAccess.getOperatorAccess().getDivEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAndEnumLiteralDeclaration_9()); }
(	'and' 
)
{ after(grammarAccess.getOperatorAccess().getAndEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNeqEnumLiteralDeclaration_10()); }
(	'neq' 
)
{ after(grammarAccess.getOperatorAccess().getNeqEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getOrEnumLiteralDeclaration_11()); }
(	'or' 
)
{ after(grammarAccess.getOperatorAccess().getOrEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNotEnumLiteralDeclaration_12()); }
(	'not' 
)
{ after(grammarAccess.getOperatorAccess().getNotEnumLiteralDeclaration_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getIsActiveAssignment_0()); }
(rule__StateMachine__IsActiveAssignment_0)
{ after(grammarAccess.getStateMachineAccess().getIsActiveAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachineKeyword_1()); }

	'StateMachine' 

{ after(grammarAccess.getStateMachineAccess().getStateMachineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameAssignment_2()); }
(rule__StateMachine__NameAssignment_2)
{ after(grammarAccess.getStateMachineAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__3__Impl
	rule__StateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__4__Impl
	rule__StateMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesAssignment_4()); }
(rule__StateMachine__VariablesAssignment_4)*
{ after(grammarAccess.getStateMachineAccess().getVariablesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__5__Impl
	rule__StateMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsKeyword_5()); }

	'events' 

{ after(grammarAccess.getStateMachineAccess().getEventsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__6__Impl
	rule__StateMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__7__Impl
	rule__StateMachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsAssignment_7()); }
(rule__StateMachine__EventsAssignment_7)
{ after(grammarAccess.getStateMachineAccess().getEventsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__8__Impl
	rule__StateMachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_8()); }
(rule__StateMachine__Group_8__0)*
{ after(grammarAccess.getStateMachineAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__9__Impl
	rule__StateMachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__StateMachine__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_8__0__Impl
	rule__StateMachine__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getStateMachineAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsAssignment_8_1()); }
(rule__StateMachine__EventsAssignment_8_1)
{ after(grammarAccess.getStateMachineAccess().getEventsAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getVariableAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getAlternatives_1()); }
(rule__Variable__Alternatives_1)
{ after(grammarAccess.getVariableAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOperationAction_0()); }
(

)
{ after(grammarAccess.getOperationAccess().getOperationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOperationKeyword_1()); }

	'Operation' 

{ after(grammarAccess.getOperationAccess().getOperationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3()); }
(rule__Operation__Group_3__0)?
{ after(grammarAccess.getOperationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Operation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__0__Impl
	rule__Operation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsKeyword_3_0()); }

	'contents' 

{ after(grammarAccess.getOperationAccess().getContentsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__1__Impl
	rule__Operation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__2__Impl
	rule__Operation__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignment_3_2()); }
(rule__Operation__ContentsAssignment_3_2)
{ after(grammarAccess.getOperationAccess().getContentsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__3__Impl
	rule__Operation__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3_3()); }
(rule__Operation__Group_3_3__0)*
{ after(grammarAccess.getOperationAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_3_4()); }

	'}' 

{ after(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Operation__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3_3__0__Impl
	rule__Operation__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getOperationAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignment_3_3_1()); }
(rule__Operation__ContentsAssignment_3_3_1)
{ after(grammarAccess.getOperationAccess().getContentsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State_Impl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group__0__Impl
	rule__State_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getIsActiveAssignment_0()); }
(rule__State_Impl__IsActiveAssignment_0)
{ after(grammarAccess.getState_ImplAccess().getIsActiveAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Impl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group__1__Impl
	rule__State_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getStateKeyword_1()); }

	'State' 

{ after(grammarAccess.getState_ImplAccess().getStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Impl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group__2__Impl
	rule__State_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getNameAssignment_2()); }
(rule__State_Impl__NameAssignment_2)
{ after(grammarAccess.getState_ImplAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Impl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group__3__Impl
	rule__State_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getState_ImplAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Impl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group__4__Impl
	rule__State_Impl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getGroup_4()); }
(rule__State_Impl__Group_4__0)?
{ after(grammarAccess.getState_ImplAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Impl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getState_ImplAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__State_Impl__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group_4__0__Impl
	rule__State_Impl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getOperationKeyword_4_0()); }

	'operation' 

{ after(grammarAccess.getState_ImplAccess().getOperationKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Impl__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Impl__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getOperationAssignment_4_1()); }
(rule__State_Impl__OperationAssignment_4_1)
{ after(grammarAccess.getState_ImplAccess().getOperationAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InitialState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__0__Impl
	rule__InitialState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getInitialStateKeyword_0()); }

	'InitialState' 

{ after(grammarAccess.getInitialStateAccess().getInitialStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__1__Impl
	rule__InitialState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getInitialStateAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__2__Impl
	rule__InitialState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getReferencedStateKeyword_2()); }

	'referencedState' 

{ after(grammarAccess.getInitialStateAccess().getReferencedStateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__3__Impl
	rule__InitialState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getReferencedStateAssignment_3()); }
(rule__InitialState__ReferencedStateAssignment_3)
{ after(grammarAccess.getInitialStateAccess().getReferencedStateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialState__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInitialStateAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventAction_0()); }
(

)
{ after(grammarAccess.getEventAccess().getEventAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_1()); }
(rule__Event__NameAssignment_1)
{ after(grammarAccess.getEventAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAssignmentKeyword_0()); }

	'Assignment' 

{ after(grammarAccess.getAssignmentAccess().getAssignmentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getAssignmentAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_2()); }
(rule__Assignment__Group_2__0)?
{ after(grammarAccess.getAssignmentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__3__Impl
	rule__Assignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableKeyword_3()); }

	'variable' 

{ after(grammarAccess.getAssignmentAccess().getVariableKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__4__Impl
	rule__Assignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_4()); }
(rule__Assignment__VariableAssignment_4)
{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__5__Impl
	rule__Assignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionKeyword_5()); }

	'expression' 

{ after(grammarAccess.getAssignmentAccess().getExpressionKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__6__Impl
	rule__Assignment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_6()); }
(rule__Assignment__ExpressionAssignment_6)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getAssignmentAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Assignment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__0__Impl
	rule__Assignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().get_nameKeyword_2_0()); }

	'_name' 

{ after(grammarAccess.getAssignmentAccess().get_nameKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().get_nameAssignment_2_1()); }
(rule__Assignment___nameAssignment_2_1)
{ after(grammarAccess.getAssignmentAccess().get_nameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionKeyword_0()); }

	'Expression' 

{ after(grammarAccess.getExpressionAccess().getExpressionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__2__Impl
	rule__Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorKeyword_2()); }

	'operator' 

{ after(grammarAccess.getExpressionAccess().getOperatorKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__3__Impl
	rule__Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorAssignment_3()); }
(rule__Expression__OperatorAssignment_3)
{ after(grammarAccess.getExpressionAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__4__Impl
	rule__Expression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_4()); }
(rule__Expression__Group_4__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__5__Impl
	rule__Expression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftKeyword_5()); }

	'left' 

{ after(grammarAccess.getExpressionAccess().getLeftKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__6__Impl
	rule__Expression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftAssignment_6()); }
(rule__Expression__LeftAssignment_6)
{ after(grammarAccess.getExpressionAccess().getLeftAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__7__Impl
	rule__Expression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightKeyword_7()); }

	'right' 

{ after(grammarAccess.getExpressionAccess().getRightKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__8__Impl
	rule__Expression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_8()); }
(rule__Expression__RightAssignment_8)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getExpressionAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Expression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__0__Impl
	rule__Expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().get_nameKeyword_4_0()); }

	'_name' 

{ after(grammarAccess.getExpressionAccess().get_nameKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().get_nameAssignment_4_1()); }
(rule__Expression___nameAssignment_4_1)
{ after(grammarAccess.getExpressionAccess().get_nameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__0__Impl
	rule__VariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableReferenceKeyword_0()); }

	'VariableReference' 

{ after(grammarAccess.getVariableReferenceAccess().getVariableReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__1__Impl
	rule__VariableReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getVariableReferenceAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__2__Impl
	rule__VariableReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup_2()); }
(rule__VariableReference__Group_2__0)?
{ after(grammarAccess.getVariableReferenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__3__Impl
	rule__VariableReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableKeyword_3()); }

	'variable' 

{ after(grammarAccess.getVariableReferenceAccess().getVariableKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__4__Impl
	rule__VariableReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableAssignment_4()); }
(rule__VariableReference__VariableAssignment_4)
{ after(grammarAccess.getVariableReferenceAccess().getVariableAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getVariableReferenceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VariableReference__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_2__0__Impl
	rule__VariableReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().get_nameKeyword_2_0()); }

	'_name' 

{ after(grammarAccess.getVariableReferenceAccess().get_nameKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().get_nameAssignment_2_1()); }
(rule__VariableReference___nameAssignment_2_1)
{ after(grammarAccess.getVariableReferenceAccess().get_nameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositeState_Impl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__0__Impl
	rule__CompositeState_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getIsActiveAssignment_0()); }
(rule__CompositeState_Impl__IsActiveAssignment_0)
{ after(grammarAccess.getCompositeState_ImplAccess().getIsActiveAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__1__Impl
	rule__CompositeState_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getCompositeStateKeyword_1()); }

	'CompositeState' 

{ after(grammarAccess.getCompositeState_ImplAccess().getCompositeStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__2__Impl
	rule__CompositeState_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getNameAssignment_2()); }
(rule__CompositeState_Impl__NameAssignment_2)
{ after(grammarAccess.getCompositeState_ImplAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__3__Impl
	rule__CompositeState_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getCompositeState_ImplAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__4__Impl
	rule__CompositeState_Impl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getGroup_4()); }
(rule__CompositeState_Impl__Group_4__0)?
{ after(grammarAccess.getCompositeState_ImplAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__5__Impl
	rule__CompositeState_Impl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getStatesKeyword_5()); }

	'states' 

{ after(grammarAccess.getCompositeState_ImplAccess().getStatesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__6__Impl
	rule__CompositeState_Impl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getCompositeState_ImplAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__7__Impl
	rule__CompositeState_Impl__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getStatesAssignment_7()); }
(rule__CompositeState_Impl__StatesAssignment_7)
{ after(grammarAccess.getCompositeState_ImplAccess().getStatesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__8__Impl
	rule__CompositeState_Impl__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getGroup_8()); }
(rule__CompositeState_Impl__Group_8__0)*
{ after(grammarAccess.getCompositeState_ImplAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__9__Impl
	rule__CompositeState_Impl__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getCompositeState_ImplAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__10__Impl
	rule__CompositeState_Impl__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getInitialStateKeyword_10()); }

	'initialState' 

{ after(grammarAccess.getCompositeState_ImplAccess().getInitialStateKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__11__Impl
	rule__CompositeState_Impl__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getInitialStateAssignment_11()); }
(rule__CompositeState_Impl__InitialStateAssignment_11)
{ after(grammarAccess.getCompositeState_ImplAccess().getInitialStateAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getRightCurlyBracketKeyword_12()); }

	'}' 

{ after(grammarAccess.getCompositeState_ImplAccess().getRightCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__CompositeState_Impl__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group_4__0__Impl
	rule__CompositeState_Impl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getOperationKeyword_4_0()); }

	'operation' 

{ after(grammarAccess.getCompositeState_ImplAccess().getOperationKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getOperationAssignment_4_1()); }
(rule__CompositeState_Impl__OperationAssignment_4_1)
{ after(grammarAccess.getCompositeState_ImplAccess().getOperationAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositeState_Impl__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group_8__0__Impl
	rule__CompositeState_Impl__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getCompositeState_ImplAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeState_Impl__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeState_Impl__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getStatesAssignment_8_1()); }
(rule__CompositeState_Impl__StatesAssignment_8_1)
{ after(grammarAccess.getCompositeState_ImplAccess().getStatesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__0__Impl
	rule__BooleanVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getBooleanVariableAction_0()); }
(

)
{ after(grammarAccess.getBooleanVariableAccess().getBooleanVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__1__Impl
	rule__BooleanVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getNameAssignment_1()); }
(rule__BooleanVariable__NameAssignment_1)
{ after(grammarAccess.getBooleanVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__2__Impl
	rule__BooleanVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getBooleanVariableAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__3__Impl
	rule__BooleanVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getBooleanKeyword_3()); }

	'boolean' 

{ after(grammarAccess.getBooleanVariableAccess().getBooleanKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getGroup_4()); }
(rule__BooleanVariable__Group_4__0)?
{ after(grammarAccess.getBooleanVariableAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BooleanVariable__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group_4__0__Impl
	rule__BooleanVariable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getColonEqualsSignKeyword_4_0()); }

	':=' 

{ after(grammarAccess.getBooleanVariableAccess().getColonEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanVariable__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanVariable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getValueAssignment_4_1()); }
(rule__BooleanVariable__ValueAssignment_4_1)
{ after(grammarAccess.getBooleanVariableAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__0__Impl
	rule__IntegerVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getIntegerVariableAction_0()); }
(

)
{ after(grammarAccess.getIntegerVariableAccess().getIntegerVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__1__Impl
	rule__IntegerVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getNameAssignment_1()); }
(rule__IntegerVariable__NameAssignment_1)
{ after(grammarAccess.getIntegerVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__2__Impl
	rule__IntegerVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getIntegerVariableAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__3__Impl
	rule__IntegerVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getIntegerKeyword_3()); }

	'integer' 

{ after(grammarAccess.getIntegerVariableAccess().getIntegerKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getGroup_4()); }
(rule__IntegerVariable__Group_4__0)?
{ after(grammarAccess.getIntegerVariableAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IntegerVariable__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group_4__0__Impl
	rule__IntegerVariable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getColonEqualsSignKeyword_4_0()); }

	':=' 

{ after(grammarAccess.getIntegerVariableAccess().getColonEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerVariable__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerVariable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getValueAssignment_4_1()); }
(rule__IntegerVariable__ValueAssignment_4_1)
{ after(grammarAccess.getIntegerVariableAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__StateMachine__IsActiveAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getIsActiveIsActiveKeyword_0_0()); }
(
{ before(grammarAccess.getStateMachineAccess().getIsActiveIsActiveKeyword_0_0()); }

	'isActive' 

{ after(grammarAccess.getStateMachineAccess().getIsActiveIsActiveKeyword_0_0()); }
)

{ after(grammarAccess.getStateMachineAccess().getIsActiveIsActiveKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getStateMachineAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VariablesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesVariableParserRuleCall_4_0()); }
	ruleVariable{ after(grammarAccess.getStateMachineAccess().getVariablesVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__EventsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_7_0()); }
	ruleEvent{ after(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__EventsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_8_1_0()); }
	ruleEvent{ after(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ContentsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_3_2_0()); }
	ruleAssignment{ after(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ContentsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_3_3_1_0()); }
	ruleAssignment{ after(grammarAccess.getOperationAccess().getContentsAssignmentParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__IsActiveAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }
(
{ before(grammarAccess.getState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }

	'isActive' 

{ after(grammarAccess.getState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }
)

{ after(grammarAccess.getState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getState_ImplAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_Impl__OperationAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_ImplAccess().getOperationOperationParserRuleCall_4_1_0()); }
	ruleOperation{ after(grammarAccess.getState_ImplAccess().getOperationOperationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__ReferencedStateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialStateAccess().getReferencedStateStateCrossReference_3_0()); }
(
{ before(grammarAccess.getInitialStateAccess().getReferencedStateStateEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getInitialStateAccess().getReferencedStateStateEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getInitialStateAccess().getReferencedStateStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Event__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment___nameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().get_nameEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getAssignmentAccess().get_nameEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_4_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getVariableVariableEStringParserRuleCall_4_0_1()); }
	ruleEString{ after(grammarAccess.getAssignmentAccess().getVariableVariableEStringParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionElementParserRuleCall_6_0()); }
	ruleExpressionElement{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionElementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorOperatorEnumRuleCall_3_0()); }
	ruleOperator{ after(grammarAccess.getExpressionAccess().getOperatorOperatorEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression___nameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().get_nameEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getExpressionAccess().get_nameEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LeftAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftExpressionElementParserRuleCall_6_0()); }
	ruleExpressionElement{ after(grammarAccess.getExpressionAccess().getLeftExpressionElementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightExpressionElementParserRuleCall_8_0()); }
	ruleExpressionElement{ after(grammarAccess.getExpressionAccess().getRightExpressionElementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanData__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDataAccess().getValueEBooleanParserRuleCall_0()); }
	ruleEBoolean{ after(grammarAccess.getBooleanDataAccess().getValueEBooleanParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerData__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataAccess().getValueEIntParserRuleCall_0()); }
	ruleEInt{ after(grammarAccess.getIntegerDataAccess().getValueEIntParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference___nameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().get_nameEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getVariableReferenceAccess().get_nameEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VariableAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_4_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableEStringParserRuleCall_4_0_1()); }
	ruleEString{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableEStringParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__IsActiveAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }
(
{ before(grammarAccess.getCompositeState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }

	'isActive' 

{ after(grammarAccess.getCompositeState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }
)

{ after(grammarAccess.getCompositeState_ImplAccess().getIsActiveIsActiveKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getCompositeState_ImplAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__OperationAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getOperationOperationParserRuleCall_4_1_0()); }
	ruleOperation{ after(grammarAccess.getCompositeState_ImplAccess().getOperationOperationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__StatesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getStatesStateParserRuleCall_7_0()); }
	ruleState{ after(grammarAccess.getCompositeState_ImplAccess().getStatesStateParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__StatesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getStatesStateParserRuleCall_8_1_0()); }
	ruleState{ after(grammarAccess.getCompositeState_ImplAccess().getStatesStateParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeState_Impl__InitialStateAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeState_ImplAccess().getInitialStateInitialStateParserRuleCall_11_0()); }
	ruleInitialState{ after(grammarAccess.getCompositeState_ImplAccess().getInitialStateInitialStateParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getBooleanVariableAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanVariable__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanVariableAccess().getValueBooleanDataParserRuleCall_4_1_0()); }
	ruleBooleanData{ after(grammarAccess.getBooleanVariableAccess().getValueBooleanDataParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getIntegerVariableAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerVariable__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerVariableAccess().getValueIntegerDataParserRuleCall_4_1_0()); }
	ruleIntegerData{ after(grammarAccess.getIntegerVariableAccess().getValueIntegerDataParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


